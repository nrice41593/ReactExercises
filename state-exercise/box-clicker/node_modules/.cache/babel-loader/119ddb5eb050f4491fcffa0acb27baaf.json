{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nathan/Desktop/ReactExercises/state-exercise/box-clicker/src/App.js\";\nimport React, { Component } from 'react';\nimport Box from './Box';\nimport './App.css';\nexport default class App extends Component {\n  constructor(props) {\n    super(props); // set default state\n\n    const boxes = [];\n    const numBoxes = 24;\n\n    for (let i = 0; i < numBoxes; i++) {\n      boxes.push({\n        id: i,\n        color: this.getRandomColor()\n      });\n    }\n\n    this.state = {\n      boxes\n    };\n    this.handleBoxClick = this.handleBoxClick.bind(this); // method bind\n  }\n\n  handleBoxClick(e) {\n    const newBoxes = this.state.boxes.map(box => {\n      // only change color for the specific one box\n      if (box.id == e.target.id) {\n        box.color = this.getRandomColor();\n      }\n\n      return box;\n    });\n    this.setState({\n      boxes: newBoxes\n    });\n  }\n\n  getRandomColor() {\n    // select a random index from the props.colors\n    const colorIndex = Math.floor(Math.random() * this.props.allColors.length);\n    return this.props.allColors[colorIndex];\n  }\n\n  render() {\n    const boxes = this.state.boxes.map(box => /*#__PURE__*/_jsxDEV(Box, {\n      id: box.id,\n      color: box.color,\n      handleClick: this.handleBoxClick\n    }, box.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: boxes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nApp.defaultProps = {\n  allColors: ['AliceBlue', 'AntiqueWhite', 'Aqua', 'Aquamarine', 'Azure', 'Beige', 'Bisque', 'Black', 'BlanchedAlmond', 'Blue', 'BlueViolet', 'Brown', 'BurlyWood', 'CadetBlue', 'Chartreuse', 'Chocolate', 'Coral', 'CornflowerBlue', 'Cornsilk', 'Crimson', 'Cyan', 'DarkBlue', 'DarkCyan', 'DarkGoldenRod', 'DarkGray', 'DarkGrey', 'DarkGreen', 'DarkKhaki', 'DarkMagenta', 'DarkOliveGreen', 'Darkorange', 'DarkOrchid', 'DarkRed', 'DarkSalmon', 'DarkSeaGreen', 'DarkSlateBlue', 'DarkSlateGray', 'DarkSlateGrey', 'DarkTurquoise', 'DarkViolet', 'DeepPink', 'DeepSkyBlue', 'DimGray', 'DimGrey', 'DodgerBlue', 'FireBrick', 'FloralWhite', 'ForestGreen', 'Fuchsia', 'Gainsboro', 'GhostWhite', 'Gold', 'GoldenRod', 'Gray', 'Grey', 'Green', 'GreenYellow', 'HoneyDew', 'HotPink', 'IndianRed', 'Indigo', 'Ivory', 'Khaki', 'Lavender', 'LavenderBlush', 'LawnGreen', 'LemonChiffon', 'LightBlue', 'LightCoral', 'LightCyan', 'LightGoldenRodYellow', 'LightGray', 'LightGrey', 'LightGreen', 'LightPink', 'LightSalmon', 'LightSeaGreen', 'LightSkyBlue', 'LightSlateGray', 'LightSlateGrey', 'LightSteelBlue', 'LightYellow', 'Lime', 'LimeGreen', 'Linen', 'Magenta', 'Maroon', 'MediumAquaMarine', 'MediumBlue', 'MediumOrchid', 'MediumPurple', 'MediumSeaGreen', 'MediumSlateBlue', 'MediumSpringGreen', 'MediumTurquoise', 'MediumVioletRed', 'MidnightBlue', 'MintCream', 'MistyRose', 'Moccasin', 'NavajoWhite', 'Navy', 'OldLace', 'Olive', 'OliveDrab', 'Orange', 'OrangeRed', 'Orchid', 'PaleGoldenRod', 'PaleGreen', 'PaleTurquoise', 'PaleVioletRed', 'PapayaWhip', 'PeachPuff', 'Peru', 'Pink', 'Plum', 'PowderBlue', 'Purple', 'Red', 'RosyBrown', 'RoyalBlue', 'SaddleBrown', 'Salmon', 'SandyBrown', 'SeaGreen', 'SeaShell', 'Sienna', 'Silver', 'SkyBlue', 'SlateBlue', 'SlateGray', 'SlateGrey', 'Snow', 'SpringGreen', 'SteelBlue', 'Tan', 'Teal', 'Thistle', 'Tomato', 'Turquoise', 'Violet', 'Wheat', 'White', 'WhiteSmoke', 'Yellow', 'YellowGreen']\n};","map":{"version":3,"sources":["/Users/nathan/Desktop/ReactExercises/state-exercise/box-clicker/src/App.js"],"names":["React","Component","Box","App","constructor","props","boxes","numBoxes","i","push","id","color","getRandomColor","state","handleBoxClick","bind","e","newBoxes","map","box","target","setState","colorIndex","Math","floor","random","allColors","length","render","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Box from './Box';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    // set default state\n    const boxes = [];\n    const numBoxes = 24;\n    for (let i = 0; i < numBoxes; i++) {\n      boxes.push({\n        id: i,\n        color: this.getRandomColor()\n      });\n    }\n    this.state = { boxes };\n\n    this.handleBoxClick = this.handleBoxClick.bind(this); // method bind\n  }\n\n  handleBoxClick(e) {\n    const newBoxes = this.state.boxes.map(box => {\n      // only change color for the specific one box\n      if (box.id == e.target.id) {\n        box.color = this.getRandomColor();\n      }\n      return box;\n    });\n\n    this.setState({ boxes: newBoxes });\n  }\n\n  getRandomColor() {\n    // select a random index from the props.colors\n    const colorIndex = Math.floor(Math.random() * this.props.allColors.length);\n    return this.props.allColors[colorIndex];\n  }\n\n  render() {\n    const boxes = this.state.boxes.map(box => (\n      <Box\n        key={box.id}\n        id={box.id}\n        color={box.color}\n        handleClick={this.handleBoxClick}\n      />\n    ));\n    return <div className=\"App\">{boxes}</div>;\n  }\n}\n\nApp.defaultProps = {\n  allColors: [\n    'AliceBlue',\n    'AntiqueWhite',\n    'Aqua',\n    'Aquamarine',\n    'Azure',\n    'Beige',\n    'Bisque',\n    'Black',\n    'BlanchedAlmond',\n    'Blue',\n    'BlueViolet',\n    'Brown',\n    'BurlyWood',\n    'CadetBlue',\n    'Chartreuse',\n    'Chocolate',\n    'Coral',\n    'CornflowerBlue',\n    'Cornsilk',\n    'Crimson',\n    'Cyan',\n    'DarkBlue',\n    'DarkCyan',\n    'DarkGoldenRod',\n    'DarkGray',\n    'DarkGrey',\n    'DarkGreen',\n    'DarkKhaki',\n    'DarkMagenta',\n    'DarkOliveGreen',\n    'Darkorange',\n    'DarkOrchid',\n    'DarkRed',\n    'DarkSalmon',\n    'DarkSeaGreen',\n    'DarkSlateBlue',\n    'DarkSlateGray',\n    'DarkSlateGrey',\n    'DarkTurquoise',\n    'DarkViolet',\n    'DeepPink',\n    'DeepSkyBlue',\n    'DimGray',\n    'DimGrey',\n    'DodgerBlue',\n    'FireBrick',\n    'FloralWhite',\n    'ForestGreen',\n    'Fuchsia',\n    'Gainsboro',\n    'GhostWhite',\n    'Gold',\n    'GoldenRod',\n    'Gray',\n    'Grey',\n    'Green',\n    'GreenYellow',\n    'HoneyDew',\n    'HotPink',\n    'IndianRed',\n    'Indigo',\n    'Ivory',\n    'Khaki',\n    'Lavender',\n    'LavenderBlush',\n    'LawnGreen',\n    'LemonChiffon',\n    'LightBlue',\n    'LightCoral',\n    'LightCyan',\n    'LightGoldenRodYellow',\n    'LightGray',\n    'LightGrey',\n    'LightGreen',\n    'LightPink',\n    'LightSalmon',\n    'LightSeaGreen',\n    'LightSkyBlue',\n    'LightSlateGray',\n    'LightSlateGrey',\n    'LightSteelBlue',\n    'LightYellow',\n    'Lime',\n    'LimeGreen',\n    'Linen',\n    'Magenta',\n    'Maroon',\n    'MediumAquaMarine',\n    'MediumBlue',\n    'MediumOrchid',\n    'MediumPurple',\n    'MediumSeaGreen',\n    'MediumSlateBlue',\n    'MediumSpringGreen',\n    'MediumTurquoise',\n    'MediumVioletRed',\n    'MidnightBlue',\n    'MintCream',\n    'MistyRose',\n    'Moccasin',\n    'NavajoWhite',\n    'Navy',\n    'OldLace',\n    'Olive',\n    'OliveDrab',\n    'Orange',\n    'OrangeRed',\n    'Orchid',\n    'PaleGoldenRod',\n    'PaleGreen',\n    'PaleTurquoise',\n    'PaleVioletRed',\n    'PapayaWhip',\n    'PeachPuff',\n    'Peru',\n    'Pink',\n    'Plum',\n    'PowderBlue',\n    'Purple',\n    'Red',\n    'RosyBrown',\n    'RoyalBlue',\n    'SaddleBrown',\n    'Salmon',\n    'SandyBrown',\n    'SeaGreen',\n    'SeaShell',\n    'Sienna',\n    'Silver',\n    'SkyBlue',\n    'SlateBlue',\n    'SlateGray',\n    'SlateGrey',\n    'Snow',\n    'SpringGreen',\n    'SteelBlue',\n    'Tan',\n    'Teal',\n    'Thistle',\n    'Tomato',\n    'Turquoise',\n    'Violet',\n    'Wheat',\n    'White',\n    'WhiteSmoke',\n    'Yellow',\n    'YellowGreen'\n  ]\n};"]},"metadata":{},"sourceType":"module"}